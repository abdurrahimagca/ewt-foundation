name: Deploy to Production

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DOT_ENV }}" ]; then echo "DOT_ENV is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then echo "GITHUB_TOKEN is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "SSH_KEY is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_IP }}" ]; then echo "SSH_IP is not set!" >&2; exit 1; fi

      - name: Create .env file
        run: |
          umask 077
          echo "${{ secrets.DOT_ENV }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache-filters: true

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to Server
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_IP: ${{ secrets.SSH_IP }}
        run: |
          set -e

          echo ">>> Connecting to server and deploying application"
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP << EOF
            set -e

            echo ">>> Navigating to project directory"
            cd ~/ewt-foundation || exit 1

            echo ">>> Pulling latest changes with rebase"
            git fetch origin
            git reset --hard origin/main

            echo ">>> Checking Docker status"
            docker-compose -f compose.yml ps

            echo ">>> Logging into GitHub Container Registry"
            echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo ">>> Pulling the latest Docker image"
            docker-compose -f compose.yml pull

            echo ">>> Stopping existing containers"
            docker-compose -f compose.yml down

            echo ">>> Pruning unused Docker resources"
            docker system prune -af

            echo ">>> Starting containers with the latest image"
            docker-compose -f compose.yml up -d

            echo ">>> Checking running containers"
            docker-compose -f compose.yml ps

            echo ">>> Showing recent logs"
            docker-compose -f compose.yml logs --tail=50
          EOF
