name: Deploy to Production

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DOT_ENV }}" ]; then echo "DOT_ENV is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.GH_TOKEN }}" ]; then echo "GH_TOKEN is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "SSH_KEY is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_IP }}" ]; then echo "SSH_IP is not set!" >&2; exit 1; fi

      - name: Create .env file
        run: |
          umask 077
          echo "${{ secrets.DOT_ENV }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to Server
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_IP: ${{ secrets.SSH_IP }}
        run: |
          set -e
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP << EOF
            cd ~/ewt-foundation || exit 1

            # Login to GitHub Container Registry
            echo "${GH_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull the latest image
            docker compose pull

            # Stop existing containers
            docker compose down

            # Remove old containers and clear cache
            docker system prune -af

            # Start service
            docker compose up -d

            # Verify deployment
            docker compose ps
            docker compose logs --tail=50
          EOF
